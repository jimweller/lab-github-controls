# https://www.npmjs.com/package/@commitlint/config-conventional
# https://www.conventionalcommits.org/en/v1.0.0/
#
# Anatomy of a commit message according to commitlint
#
# type(scope): subject <--this line is collecively the header
# body
# FOOTER
#
# We probably don't need scopes unless we start doing mega/mono repos
extends:
  - '@commitlint/config-conventional'
rules:
  type-enum:  # list of allowed types, 'fix: smash bug' would succeed, 'cool: fix broke thing' would fail
    - 2
    - always
    - - ci
      - feat
      - fix
      - docs
      - style
      - refactor
      - perf
      - test
      - revert
      - chore
  type-empty: [2,'never'] # no missing types, 'fix: smash bug' would succeed, 'smash bug' would fail
  type-case: [2,'always','lowerCase'] # only lower case types, 'fix: smash bug' would succeed, 'FIX: smash bug' would fail
  subject-empty: [2, 'never'] # no empty commit subjects
  subject-case: [2, 'never',  ['sentence-case', 'start-case', 'pascal-case', 'upper-case'] ] # lower case only
  subject-full-stop: [2, never, '.'] # header must not end with a period
  header-max-length: [2, 'always', 79] # maximum 72 chars for type + subject, that's just under standard terminal width
  body-max-line-length: [2, 'always', 200] # maximum characters for each line of body
  body-leading-blank: [2, 'always'] # must be a blank line between header and body
  footer-max-line-length: [2, 'always', 79] # maximum character for footer
  footer-leading-blank: [2, 'always'] # must be a blank line between body and footer
help: |
  **Possible types**:
  `ci`:       Changes to our CI configuration files and scripts
  `feat`:     Adds a new feature.
  `fix`:      Solves a bug.
  `docs`:     Adds or alters documentation. (example scopes: readme, worker, code_of_conduct, contributors)
  `style`:    Improves formatting, white-space.
  `refactor`: Rewrites code without feature, performance or bug changes.
  `perf`:     Improves performance.
  `test`:     Adds or modifies tests. (example scopes: functionals, unit-tests)
  `revert`:   Changes that reverting other changes
  `chore`:    No production code change. Updating grunt tasks etc